name: Test CI

on: [push, pull_request]

env:
  qemu-version: 8.2.0
  arceos-apps: '68054e8'

jobs:
  test_local:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [riscv64, aarch64]
        rust-toolchain: [nightly-2024-12-25, nightly]
    steps:
    - uses: actions/checkout@v4
    - name: Compress source code
      run: tar -czf ~/source.tar.gz -C ${{ github.workspace }} .
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src
    - uses: Swatinem/rust-cache@v2
    - run: cargo install cargo-binutils
    - uses: arceos-org/setup-qemu@v0.1
      with:
        version: ${{ env.qemu-version }}
        arch_list: ${{ matrix.arch }}
    - uses: ./.github/workflows/actions/setup-nimbos-guest-image
      with:
        nimbos-version: 'tags/v0.7'
        arch: ${{ matrix.arch }}
        disk-path: ${{ github.workspace }}/disk-${{ matrix.arch }}.img
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - name: Run guests
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: |
        export DISK_IMG="${{ github.workspace }}/disk-${{ matrix.arch }}.img"
        export VM_CONFIGS="$(pwd)/configs/vms/nimbos-${{ matrix.arch }}.toml"
        make ARCH=${{ matrix.arch }} defconfig
        make ARCH=${{ matrix.arch }} DISK_IMG=${DISK_IMG} LOG=info BLK=y ACCEL=n VM_CONFIGS=${VM_CONFIGS} APP_FEATURES=fs run

  test_remote:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        rust-toolchain: [nightly-2024-12-25, nightly]
    steps:
    - uses: actions/checkout@v4
    - name: Compress source code
      run: tar -czf ~/source.tar.gz -C ${{ github.workspace }} .
    - uses: ./.github/workflows/actions/setup-nimbos-guest-image
      with:
        nimbos-version: 'tags/v0.7'
        arch: ${{ matrix.arch }}
        disk-path: ${{ github.workspace }}/disk-${{ matrix.arch }}.img
    - name: Copy files to current directory
      run: |
        cp ~/source.tar.gz .
    - name: Copy x86_64 files to remote runner
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: './disk-x86_64.img,./source.tar.gz'
        target: '~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }}'
    - name: Running on remote runner
      uses: appleboy/ssh-action@v1.2.2
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          set -e
          echo "$SHELL"
          . ~/.profile
          alias cargo='cargo +${{ matrix.rust-toolchain }}'
          cargo version
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && tar -xzf source.tar.gz
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && make ARCH=x86_64 defconfig
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && make ARCH=x86_64 DISK_IMG=$(pwd)/disk-x86_64.img LOG=info BLK=y ACCEL=y VM_CONFIGS=$(pwd)/configs/vms/nimbos-x86_64.toml APP_FEATURES=fs run | tee make_output.log
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && if grep -q "panic" make_output.log; then
            echo "Test failed: 'panic' found in output msg"
            cat make_output.log
            exit 1
          fi
          cat make_output.log
          cd ~ && rm -rf ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }}
    - name: Copy files to remote runner 2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST2 }}
        username: ${{ secrets.USERNAME2 }}
        password: ${{ secrets.PASSWORD2 }}
        port: ${{ secrets.PORT2 }}
        source: './disk-x86_64.img,./source.tar.gz'
        target: '~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }}'
    - name: Running on remote runner 2
      uses: appleboy/ssh-action@v1.2.2
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      with:
        host: ${{ secrets.HOST2 }}
        username: ${{ secrets.USERNAME2 }}
        password: ${{ secrets.PASSWORD2 }}
        port: ${{ secrets.PORT2 }}
        script: |
          set -e
          echo "$SHELL"
          . ~/.profile
          alias cargo='cargo +${{ matrix.rust-toolchain }}'
          cargo version
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && tar -xzf source.tar.gz
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && make ARCH=x86_64 defconfig
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && make ARCH=x86_64 DISK_IMG=$(pwd)/disk-x86_64.img LOG=info BLK=y ACCEL=y VM_CONFIGS=$(pwd)/configs/vms/nimbos-x86_64.toml APP_FEATURES=fs run | tee make_output.log
          cd ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }} && if grep -q "panic" make_output.log; then
            echo "Test failed: 'panic' found in output msg"
            cat make_output.log
            exit 1
          fi
          cat make_output.log
          cd ~ && rm -rf ~/runner/remote_test-${{ github.run_id }}-${{ matrix.arch }}-${{ matrix.rust-toolchain }}
  
  test_matrix_output:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        rust-toolchain: [nightly-2024-12-25, nightly]
        include:
        - remote: host1
          host: host1
          username: username1
          password: password1
          port: port1
        - remote: host2
          host: host2
          username: username2
          password: password2
          port: port2
    steps:
    - name: "Print matrix"
      run: |
        echo "Matrix: ${{ toJson(matrix) }}"
